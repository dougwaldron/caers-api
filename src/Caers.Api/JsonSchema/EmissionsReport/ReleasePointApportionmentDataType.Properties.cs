//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Caers.Api;
/// <summary>
/// A type generated from a JsonSchema specification.
/// </summary>
public readonly partial struct ReleasePointApportionmentDataType
{
    /// <summary>
    /// JSON property name for <see cref = "AveragePercentEmissions"/>.
    /// </summary>
    public static ReadOnlySpan<byte> AveragePercentEmissionsUtf8JsonPropertyName => "averagePercentEmissions"u8;

    /// <summary>
    /// JSON property name for <see cref = "AveragePercentEmissions"/>.
    /// </summary>
    public const string AveragePercentEmissionsJsonPropertyName = "averagePercentEmissions";
    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentComment"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ReleasePointApportionmentCommentUtf8JsonPropertyName => "releasePointApportionmentComment"u8;

    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentComment"/>.
    /// </summary>
    public const string ReleasePointApportionmentCommentJsonPropertyName = "releasePointApportionmentComment";
    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentIdentification"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ReleasePointApportionmentIdentificationUtf8JsonPropertyName => "releasePointApportionmentIdentification"u8;

    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentIdentification"/>.
    /// </summary>
    public const string ReleasePointApportionmentIdentificationJsonPropertyName = "releasePointApportionmentIdentification";
    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentIsUncontrolled"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ReleasePointApportionmentIsUncontrolledUtf8JsonPropertyName => "releasePointApportionmentIsUncontrolled"u8;

    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentIsUncontrolled"/>.
    /// </summary>
    public const string ReleasePointApportionmentIsUncontrolledJsonPropertyName = "releasePointApportionmentIsUncontrolled";
    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentPathIdentification"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ReleasePointApportionmentPathIdentificationUtf8JsonPropertyName => "releasePointApportionmentPathIdentification"u8;

    /// <summary>
    /// JSON property name for <see cref = "ReleasePointApportionmentPathIdentification"/>.
    /// </summary>
    public const string ReleasePointApportionmentPathIdentificationJsonPropertyName = "releasePointApportionmentPathIdentification";
    /// <summary>
    /// Gets AveragePercentEmissions.
    /// </summary>
    public Corvus.Json.JsonString AveragePercentEmissions
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(AveragePercentEmissionsUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(AveragePercentEmissionsJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ReleasePointApportionmentComment.
    /// </summary>
    public Corvus.Json.JsonString ReleasePointApportionmentComment
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ReleasePointApportionmentCommentUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ReleasePointApportionmentCommentJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ReleasePointApportionmentIdentification.
    /// </summary>
    public Caers.Api.ReleasePointApportionmentDataType.ReleasePointApportionmentIdentificationIdentificationDataTypeArray ReleasePointApportionmentIdentification
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ReleasePointApportionmentIdentificationUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.ReleasePointApportionmentDataType.ReleasePointApportionmentIdentificationIdentificationDataTypeArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ReleasePointApportionmentIdentificationJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.ReleasePointApportionmentDataType.ReleasePointApportionmentIdentificationIdentificationDataTypeArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ReleasePointApportionmentIsUncontrolled.
    /// </summary>
    public Corvus.Json.JsonString ReleasePointApportionmentIsUncontrolled
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ReleasePointApportionmentIsUncontrolledUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ReleasePointApportionmentIsUncontrolledJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ReleasePointApportionmentPathIdentification.
    /// </summary>
    public Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray ReleasePointApportionmentPathIdentification
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ReleasePointApportionmentPathIdentificationUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ReleasePointApportionmentPathIdentificationJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Creates an instance of a <see cref = "ReleasePointApportionmentDataType"/>.
    /// </summary>
    public static ReleasePointApportionmentDataType Create(Corvus.Json.JsonString averagePercentEmissions, Caers.Api.ReleasePointApportionmentDataType.ReleasePointApportionmentIdentificationIdentificationDataTypeArray releasePointApportionmentIdentification, Corvus.Json.JsonString? releasePointApportionmentComment = null, Corvus.Json.JsonString? releasePointApportionmentIsUncontrolled = null, Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray? releasePointApportionmentPathIdentification = null)
    {
        var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
        builder.Add(AveragePercentEmissionsJsonPropertyName, averagePercentEmissions.AsAny);
        builder.Add(ReleasePointApportionmentIdentificationJsonPropertyName, releasePointApportionmentIdentification.AsAny);
        if (releasePointApportionmentComment is Corvus.Json.JsonString releasePointApportionmentComment__)
        {
            builder.Add(ReleasePointApportionmentCommentJsonPropertyName, releasePointApportionmentComment__.AsAny);
        }

        if (releasePointApportionmentIsUncontrolled is Corvus.Json.JsonString releasePointApportionmentIsUncontrolled__)
        {
            builder.Add(ReleasePointApportionmentIsUncontrolledJsonPropertyName, releasePointApportionmentIsUncontrolled__.AsAny);
        }

        if (releasePointApportionmentPathIdentification is Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray releasePointApportionmentPathIdentification__)
        {
            builder.Add(ReleasePointApportionmentPathIdentificationJsonPropertyName, releasePointApportionmentPathIdentification__.AsAny);
        }

        return builder.ToImmutable();
    }

    /// <summary>
    /// Sets averagePercentEmissions.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public ReleasePointApportionmentDataType WithAveragePercentEmissions(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(AveragePercentEmissionsJsonPropertyName, value);
    }

    /// <summary>
    /// Sets releasePointApportionmentComment.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public ReleasePointApportionmentDataType WithReleasePointApportionmentComment(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(ReleasePointApportionmentCommentJsonPropertyName, value);
    }

    /// <summary>
    /// Sets releasePointApportionmentIdentification.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public ReleasePointApportionmentDataType WithReleasePointApportionmentIdentification(in Caers.Api.ReleasePointApportionmentDataType.ReleasePointApportionmentIdentificationIdentificationDataTypeArray value)
    {
        return this.SetProperty(ReleasePointApportionmentIdentificationJsonPropertyName, value);
    }

    /// <summary>
    /// Sets releasePointApportionmentIsUncontrolled.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public ReleasePointApportionmentDataType WithReleasePointApportionmentIsUncontrolled(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(ReleasePointApportionmentIsUncontrolledJsonPropertyName, value);
    }

    /// <summary>
    /// Sets releasePointApportionmentPathIdentification.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public ReleasePointApportionmentDataType WithReleasePointApportionmentPathIdentification(in Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray value)
    {
        return this.SetProperty(ReleasePointApportionmentPathIdentificationJsonPropertyName, value);
    }

    private static ValidationContext __CorvusValidateAveragePercentEmissions(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateReleasePointApportionmentIdentification(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.ReleasePointApportionmentDataType.ReleasePointApportionmentIdentificationIdentificationDataTypeArray>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateReleasePointApportionmentIsUncontrolled(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateReleasePointApportionmentComment(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateReleasePointApportionmentPathIdentification(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.ReleasePointApportionmentDataType.IdentificationDataTypeArray>().Validate(validationContext, level);
    }

    /// <summary>
    /// Tries to get the validator for the given property.
    /// </summary>
    /// <param name = "property">The property for which to get the validator.</param>
    /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
    /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
    /// <returns><c>True</c> if the validator was found.</returns>
    private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
    {
        if (hasJsonElementBacking)
        {
            if (property.NameEquals(AveragePercentEmissionsUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateAveragePercentEmissions;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentIdentificationUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentIdentification;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentIsUncontrolledUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentIsUncontrolled;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentCommentUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentComment;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentPathIdentificationUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentPathIdentification;
                return true;
            }
        }
        else
        {
            if (property.NameEquals(AveragePercentEmissionsJsonPropertyName))
            {
                propertyValidator = __CorvusValidateAveragePercentEmissions;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentIdentificationJsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentIdentification;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentIsUncontrolledJsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentIsUncontrolled;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentCommentJsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentComment;
                return true;
            }
            else if (property.NameEquals(ReleasePointApportionmentPathIdentificationJsonPropertyName))
            {
                propertyValidator = __CorvusValidateReleasePointApportionmentPathIdentification;
                return true;
            }
        }

        propertyValidator = null;
        return false;
    }
}