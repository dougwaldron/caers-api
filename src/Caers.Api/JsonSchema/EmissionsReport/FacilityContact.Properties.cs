//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Caers.Api;
/// <summary>
/// A type generated from a JsonSchema specification.
/// </summary>
public readonly partial struct FacilityContact
{
    /// <summary>
    /// JSON property name for <see cref = "Email"/>.
    /// </summary>
    public static ReadOnlySpan<byte> EmailUtf8JsonPropertyName => "email"u8;

    /// <summary>
    /// JSON property name for <see cref = "Email"/>.
    /// </summary>
    public const string EmailJsonPropertyName = "email";
    /// <summary>
    /// JSON property name for <see cref = "FirstName"/>.
    /// </summary>
    public static ReadOnlySpan<byte> FirstNameUtf8JsonPropertyName => "firstName"u8;

    /// <summary>
    /// JSON property name for <see cref = "FirstName"/>.
    /// </summary>
    public const string FirstNameJsonPropertyName = "firstName";
    /// <summary>
    /// JSON property name for <see cref = "LastName"/>.
    /// </summary>
    public static ReadOnlySpan<byte> LastNameUtf8JsonPropertyName => "lastName"u8;

    /// <summary>
    /// JSON property name for <see cref = "LastName"/>.
    /// </summary>
    public const string LastNameJsonPropertyName = "lastName";
    /// <summary>
    /// JSON property name for <see cref = "MailingStreetAddress"/>.
    /// </summary>
    public static ReadOnlySpan<byte> MailingStreetAddressUtf8JsonPropertyName => "mailingStreetAddress"u8;

    /// <summary>
    /// JSON property name for <see cref = "MailingStreetAddress"/>.
    /// </summary>
    public const string MailingStreetAddressJsonPropertyName = "mailingStreetAddress";
    /// <summary>
    /// JSON property name for <see cref = "Phone"/>.
    /// </summary>
    public static ReadOnlySpan<byte> PhoneUtf8JsonPropertyName => "phone"u8;

    /// <summary>
    /// JSON property name for <see cref = "Phone"/>.
    /// </summary>
    public const string PhoneJsonPropertyName = "phone";
    /// <summary>
    /// JSON property name for <see cref = "PhoneExt"/>.
    /// </summary>
    public static ReadOnlySpan<byte> PhoneExtUtf8JsonPropertyName => "phoneExt"u8;

    /// <summary>
    /// JSON property name for <see cref = "PhoneExt"/>.
    /// </summary>
    public const string PhoneExtJsonPropertyName = "phoneExt";
    /// <summary>
    /// JSON property name for <see cref = "Prefix"/>.
    /// </summary>
    public static ReadOnlySpan<byte> PrefixUtf8JsonPropertyName => "prefix"u8;

    /// <summary>
    /// JSON property name for <see cref = "Prefix"/>.
    /// </summary>
    public const string PrefixJsonPropertyName = "prefix";
    /// <summary>
    /// JSON property name for <see cref = "StreetAddress"/>.
    /// </summary>
    public static ReadOnlySpan<byte> StreetAddressUtf8JsonPropertyName => "streetAddress"u8;

    /// <summary>
    /// JSON property name for <see cref = "StreetAddress"/>.
    /// </summary>
    public const string StreetAddressJsonPropertyName = "streetAddress";
    /// <summary>
    /// JSON property name for <see cref = "Type"/>.
    /// </summary>
    public static ReadOnlySpan<byte> TypeUtf8JsonPropertyName => "type"u8;

    /// <summary>
    /// JSON property name for <see cref = "Type"/>.
    /// </summary>
    public const string TypeJsonPropertyName = "type";
    /// <summary>
    /// Gets Email.
    /// </summary>
    public Caers.Api.FacilityContact.EmailEntity Email
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(EmailUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.FacilityContact.EmailEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(EmailJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.FacilityContact.EmailEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets FirstName.
    /// </summary>
    public Caers.Api.FacilityContact.FirstNameEntity FirstName
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(FirstNameUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.FacilityContact.FirstNameEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(FirstNameJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.FacilityContact.FirstNameEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets LastName.
    /// </summary>
    public Caers.Api.FacilityContact.LastNameEntity LastName
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(LastNameUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.FacilityContact.LastNameEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(LastNameJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.FacilityContact.LastNameEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets MailingStreetAddress.
    /// </summary>
    public Caers.Api.Address MailingStreetAddress
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(MailingStreetAddressUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.Address(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(MailingStreetAddressJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.Address>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Phone.
    /// </summary>
    public Caers.Api.FacilityContact.PhoneEntity Phone
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(PhoneUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.FacilityContact.PhoneEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(PhoneJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.FacilityContact.PhoneEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets PhoneExt.
    /// </summary>
    public Caers.Api.FacilityContact.PhoneExtEntity PhoneExt
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(PhoneExtUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.FacilityContact.PhoneExtEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(PhoneExtJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.FacilityContact.PhoneExtEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Prefix.
    /// </summary>
    public Caers.Api.FacilityContact.PrefixEntity Prefix
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(PrefixUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.FacilityContact.PrefixEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(PrefixJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.FacilityContact.PrefixEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets StreetAddress.
    /// </summary>
    public Caers.Api.Address StreetAddress
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(StreetAddressUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.Address(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(StreetAddressJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.Address>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Type.
    /// </summary>
    public Caers.Api.LookupValue Type
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(TypeUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.LookupValue(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(TypeJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.LookupValue>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Creates an instance of a <see cref = "FacilityContact"/>.
    /// </summary>
    public static FacilityContact Create(Caers.Api.FacilityContact.EmailEntity email, Caers.Api.FacilityContact.FirstNameEntity firstName, Caers.Api.FacilityContact.LastNameEntity lastName, Caers.Api.FacilityContact.PhoneEntity phone, Caers.Api.Address streetAddress, Caers.Api.LookupValue type, Caers.Api.Address? mailingStreetAddress = null, Caers.Api.FacilityContact.PhoneExtEntity? phoneExt = null, Caers.Api.FacilityContact.PrefixEntity? prefix = null)
    {
        var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
        builder.Add(EmailJsonPropertyName, email.AsAny);
        builder.Add(FirstNameJsonPropertyName, firstName.AsAny);
        builder.Add(LastNameJsonPropertyName, lastName.AsAny);
        builder.Add(PhoneJsonPropertyName, phone.AsAny);
        builder.Add(StreetAddressJsonPropertyName, streetAddress.AsAny);
        builder.Add(TypeJsonPropertyName, type.AsAny);
        if (mailingStreetAddress is Caers.Api.Address mailingStreetAddress__)
        {
            builder.Add(MailingStreetAddressJsonPropertyName, mailingStreetAddress__.AsAny);
        }

        if (phoneExt is Caers.Api.FacilityContact.PhoneExtEntity phoneExt__)
        {
            builder.Add(PhoneExtJsonPropertyName, phoneExt__.AsAny);
        }

        if (prefix is Caers.Api.FacilityContact.PrefixEntity prefix__)
        {
            builder.Add(PrefixJsonPropertyName, prefix__.AsAny);
        }

        return builder.ToImmutable();
    }

    /// <summary>
    /// Sets email.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithEmail(in Caers.Api.FacilityContact.EmailEntity value)
    {
        return this.SetProperty(EmailJsonPropertyName, value);
    }

    /// <summary>
    /// Sets firstName.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithFirstName(in Caers.Api.FacilityContact.FirstNameEntity value)
    {
        return this.SetProperty(FirstNameJsonPropertyName, value);
    }

    /// <summary>
    /// Sets lastName.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithLastName(in Caers.Api.FacilityContact.LastNameEntity value)
    {
        return this.SetProperty(LastNameJsonPropertyName, value);
    }

    /// <summary>
    /// Sets mailingStreetAddress.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithMailingStreetAddress(in Caers.Api.Address value)
    {
        return this.SetProperty(MailingStreetAddressJsonPropertyName, value);
    }

    /// <summary>
    /// Sets phone.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithPhone(in Caers.Api.FacilityContact.PhoneEntity value)
    {
        return this.SetProperty(PhoneJsonPropertyName, value);
    }

    /// <summary>
    /// Sets phoneExt.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithPhoneExt(in Caers.Api.FacilityContact.PhoneExtEntity value)
    {
        return this.SetProperty(PhoneExtJsonPropertyName, value);
    }

    /// <summary>
    /// Sets prefix.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithPrefix(in Caers.Api.FacilityContact.PrefixEntity value)
    {
        return this.SetProperty(PrefixJsonPropertyName, value);
    }

    /// <summary>
    /// Sets streetAddress.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithStreetAddress(in Caers.Api.Address value)
    {
        return this.SetProperty(StreetAddressJsonPropertyName, value);
    }

    /// <summary>
    /// Sets type.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public FacilityContact WithType(in Caers.Api.LookupValue value)
    {
        return this.SetProperty(TypeJsonPropertyName, value);
    }

    private static ValidationContext __CorvusValidateEmail(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.FacilityContact.EmailEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateFirstName(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.FacilityContact.FirstNameEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateLastName(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.FacilityContact.LastNameEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidatePhone(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.FacilityContact.PhoneEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateStreetAddress(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.Address>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateType(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.LookupValue>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidatePrefix(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.FacilityContact.PrefixEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidatePhoneExt(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.FacilityContact.PhoneExtEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateMailingStreetAddress(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.Address>().Validate(validationContext, level);
    }

    /// <summary>
    /// Tries to get the validator for the given property.
    /// </summary>
    /// <param name = "property">The property for which to get the validator.</param>
    /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
    /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
    /// <returns><c>True</c> if the validator was found.</returns>
    private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
    {
        if (hasJsonElementBacking)
        {
            if (property.NameEquals(EmailUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateEmail;
                return true;
            }
            else if (property.NameEquals(FirstNameUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateFirstName;
                return true;
            }
            else if (property.NameEquals(LastNameUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateLastName;
                return true;
            }
            else if (property.NameEquals(PhoneUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidatePhone;
                return true;
            }
            else if (property.NameEquals(StreetAddressUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateStreetAddress;
                return true;
            }
            else if (property.NameEquals(TypeUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateType;
                return true;
            }
            else if (property.NameEquals(PrefixUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidatePrefix;
                return true;
            }
            else if (property.NameEquals(PhoneExtUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidatePhoneExt;
                return true;
            }
            else if (property.NameEquals(MailingStreetAddressUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateMailingStreetAddress;
                return true;
            }
        }
        else
        {
            if (property.NameEquals(EmailJsonPropertyName))
            {
                propertyValidator = __CorvusValidateEmail;
                return true;
            }
            else if (property.NameEquals(FirstNameJsonPropertyName))
            {
                propertyValidator = __CorvusValidateFirstName;
                return true;
            }
            else if (property.NameEquals(LastNameJsonPropertyName))
            {
                propertyValidator = __CorvusValidateLastName;
                return true;
            }
            else if (property.NameEquals(PhoneJsonPropertyName))
            {
                propertyValidator = __CorvusValidatePhone;
                return true;
            }
            else if (property.NameEquals(StreetAddressJsonPropertyName))
            {
                propertyValidator = __CorvusValidateStreetAddress;
                return true;
            }
            else if (property.NameEquals(TypeJsonPropertyName))
            {
                propertyValidator = __CorvusValidateType;
                return true;
            }
            else if (property.NameEquals(PrefixJsonPropertyName))
            {
                propertyValidator = __CorvusValidatePrefix;
                return true;
            }
            else if (property.NameEquals(PhoneExtJsonPropertyName))
            {
                propertyValidator = __CorvusValidatePhoneExt;
                return true;
            }
            else if (property.NameEquals(MailingStreetAddressJsonPropertyName))
            {
                propertyValidator = __CorvusValidateMailingStreetAddress;
                return true;
            }
        }

        propertyValidator = null;
        return false;
    }
}