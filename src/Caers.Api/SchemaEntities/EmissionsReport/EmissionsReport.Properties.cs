//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Caers.Api.SchemaEntities;
/// <summary>
/// A type generated from a JsonSchema specification.
/// </summary>
public readonly partial struct EmissionsReport
{
    /// <summary>
    /// JSON property name for <see cref = "AgencyFacilityIdentifier"/>.
    /// </summary>
    public static ReadOnlySpan<byte> AgencyFacilityIdentifierUtf8JsonPropertyName => "agencyFacilityIdentifier"u8;

    /// <summary>
    /// JSON property name for <see cref = "AgencyFacilityIdentifier"/>.
    /// </summary>
    public const string AgencyFacilityIdentifierJsonPropertyName = "agencyFacilityIdentifier";
    /// <summary>
    /// JSON property name for <see cref = "EisLastSubmissionStatus"/>.
    /// </summary>
    public static ReadOnlySpan<byte> EisLastSubmissionStatusUtf8JsonPropertyName => "eisLastSubmissionStatus"u8;

    /// <summary>
    /// JSON property name for <see cref = "EisLastSubmissionStatus"/>.
    /// </summary>
    public const string EisLastSubmissionStatusJsonPropertyName = "eisLastSubmissionStatus";
    /// <summary>
    /// JSON property name for <see cref = "EmissionsCreationDate"/>.
    /// </summary>
    public static ReadOnlySpan<byte> EmissionsCreationDateUtf8JsonPropertyName => "emissionsCreationDate"u8;

    /// <summary>
    /// JSON property name for <see cref = "EmissionsCreationDate"/>.
    /// </summary>
    public const string EmissionsCreationDateJsonPropertyName = "emissionsCreationDate";
    /// <summary>
    /// JSON property name for <see cref = "EmissionsYear"/>.
    /// </summary>
    public static ReadOnlySpan<byte> EmissionsYearUtf8JsonPropertyName => "emissionsYear"u8;

    /// <summary>
    /// JSON property name for <see cref = "EmissionsYear"/>.
    /// </summary>
    public const string EmissionsYearJsonPropertyName = "emissionsYear";
    /// <summary>
    /// JSON property name for <see cref = "Event"/>.
    /// </summary>
    public static ReadOnlySpan<byte> EventUtf8JsonPropertyName => "event"u8;

    /// <summary>
    /// JSON property name for <see cref = "Event"/>.
    /// </summary>
    public const string EventJsonPropertyName = "event";
    /// <summary>
    /// JSON property name for <see cref = "FacilitySite"/>.
    /// </summary>
    public static ReadOnlySpan<byte> FacilitySiteUtf8JsonPropertyName => "facilitySite"u8;

    /// <summary>
    /// JSON property name for <see cref = "FacilitySite"/>.
    /// </summary>
    public const string FacilitySiteJsonPropertyName = "facilitySite";
    /// <summary>
    /// JSON property name for <see cref = "Location"/>.
    /// </summary>
    public static ReadOnlySpan<byte> LocationUtf8JsonPropertyName => "location"u8;

    /// <summary>
    /// JSON property name for <see cref = "Location"/>.
    /// </summary>
    public const string LocationJsonPropertyName = "location";
    /// <summary>
    /// JSON property name for <see cref = "Model"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ModelUtf8JsonPropertyName => "model"u8;

    /// <summary>
    /// JSON property name for <see cref = "Model"/>.
    /// </summary>
    public const string ModelJsonPropertyName = "model";
    /// <summary>
    /// JSON property name for <see cref = "ModelVersion"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ModelVersionUtf8JsonPropertyName => "modelVersion"u8;

    /// <summary>
    /// JSON property name for <see cref = "ModelVersion"/>.
    /// </summary>
    public const string ModelVersionJsonPropertyName = "modelVersion";
    /// <summary>
    /// JSON property name for <see cref = "ProgramSystemCode"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ProgramSystemCodeUtf8JsonPropertyName => "programSystemCode"u8;

    /// <summary>
    /// JSON property name for <see cref = "ProgramSystemCode"/>.
    /// </summary>
    public const string ProgramSystemCodeJsonPropertyName = "programSystemCode";
    /// <summary>
    /// JSON property name for <see cref = "Status"/>.
    /// </summary>
    public static ReadOnlySpan<byte> StatusUtf8JsonPropertyName => "status"u8;

    /// <summary>
    /// JSON property name for <see cref = "Status"/>.
    /// </summary>
    public const string StatusJsonPropertyName = "status";
    /// <summary>
    /// JSON property name for <see cref = "SubmittalComment"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SubmittalCommentUtf8JsonPropertyName => "submittalComment"u8;

    /// <summary>
    /// JSON property name for <see cref = "SubmittalComment"/>.
    /// </summary>
    public const string SubmittalCommentJsonPropertyName = "submittalComment";
    /// <summary>
    /// JSON property name for <see cref = "UserIdentifier"/>.
    /// </summary>
    public static ReadOnlySpan<byte> UserIdentifierUtf8JsonPropertyName => "userIdentifier"u8;

    /// <summary>
    /// JSON property name for <see cref = "UserIdentifier"/>.
    /// </summary>
    public const string UserIdentifierJsonPropertyName = "userIdentifier";
    /// <summary>
    /// JSON property name for <see cref = "ValidationStatus"/>.
    /// </summary>
    public static ReadOnlySpan<byte> ValidationStatusUtf8JsonPropertyName => "validationStatus"u8;

    /// <summary>
    /// JSON property name for <see cref = "ValidationStatus"/>.
    /// </summary>
    public const string ValidationStatusJsonPropertyName = "validationStatus";
    /// <summary>
    /// JSON property name for <see cref = "Version"/>.
    /// </summary>
    public static ReadOnlySpan<byte> VersionUtf8JsonPropertyName => "version"u8;

    /// <summary>
    /// JSON property name for <see cref = "Version"/>.
    /// </summary>
    public const string VersionJsonPropertyName = "version";
    /// <summary>
    /// Gets AgencyFacilityIdentifier.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.AgencyFacilityIdentifierEntity AgencyFacilityIdentifier
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(AgencyFacilityIdentifierUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.AgencyFacilityIdentifierEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(AgencyFacilityIdentifierJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.AgencyFacilityIdentifierEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets EisLastSubmissionStatus.
    /// </summary>
    public Corvus.Json.JsonString EisLastSubmissionStatus
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(EisLastSubmissionStatusUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(EisLastSubmissionStatusJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets EmissionsCreationDate.
    /// </summary>
    public Corvus.Json.JsonDate EmissionsCreationDate
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(EmissionsCreationDateUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonDate(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(EmissionsCreationDateJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonDate>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets EmissionsYear.
    /// </summary>
    public Corvus.Json.JsonInteger EmissionsYear
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(EmissionsYearUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonInteger(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(EmissionsYearJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonInteger>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Event.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray Event
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(EventUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(EventJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets FacilitySite.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray FacilitySite
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(FacilitySiteUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(FacilitySiteJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Location.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray Location
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(LocationUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(LocationJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Model.
    /// </summary>
    public Corvus.Json.JsonString Model
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ModelUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ModelJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ModelVersion.
    /// </summary>
    public Corvus.Json.JsonString ModelVersion
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ModelVersionUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ModelVersionJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ProgramSystemCode.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.ProgramSystemCodeEntity ProgramSystemCode
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ProgramSystemCodeUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.ProgramSystemCodeEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ProgramSystemCodeJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.ProgramSystemCodeEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Status.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.StatusEntity Status
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(StatusUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.StatusEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(StatusJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.StatusEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SubmittalComment.
    /// </summary>
    public Corvus.Json.JsonString SubmittalComment
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SubmittalCommentUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SubmittalCommentJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets UserIdentifier.
    /// </summary>
    public Corvus.Json.JsonString UserIdentifier
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(UserIdentifierUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(UserIdentifierJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets ValidationStatus.
    /// </summary>
    public Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity ValidationStatus
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(ValidationStatusUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(ValidationStatusJsonPropertyName, out JsonAny result))
                {
                    return result.As<Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets Version.
    /// </summary>
    public Corvus.Json.JsonString Version
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(VersionUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(VersionJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Creates an instance of a <see cref = "EmissionsReport"/>.
    /// </summary>
    public static EmissionsReport Create(Caers.Api.SchemaEntities.EmissionsReport.AgencyFacilityIdentifierEntity agencyFacilityIdentifier, Corvus.Json.JsonInteger emissionsYear, Caers.Api.SchemaEntities.EmissionsReport.ProgramSystemCodeEntity programSystemCode, Corvus.Json.JsonString version, Corvus.Json.JsonString? eisLastSubmissionStatus = null, Corvus.Json.JsonDate? emissionsCreationDate = null, Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray? @event = null, Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray? facilitySite = null, Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray? location = null, Corvus.Json.JsonString? model = null, Corvus.Json.JsonString? modelVersion = null, Caers.Api.SchemaEntities.EmissionsReport.StatusEntity? status = null, Corvus.Json.JsonString? submittalComment = null, Corvus.Json.JsonString? userIdentifier = null, Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity? validationStatus = null)
    {
        var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
        builder.Add(AgencyFacilityIdentifierJsonPropertyName, agencyFacilityIdentifier.AsAny);
        builder.Add(EmissionsYearJsonPropertyName, emissionsYear.AsAny);
        builder.Add(ProgramSystemCodeJsonPropertyName, programSystemCode.AsAny);
        builder.Add(VersionJsonPropertyName, version.AsAny);
        if (eisLastSubmissionStatus is Corvus.Json.JsonString eisLastSubmissionStatus__)
        {
            builder.Add(EisLastSubmissionStatusJsonPropertyName, eisLastSubmissionStatus__.AsAny);
        }

        if (emissionsCreationDate is Corvus.Json.JsonDate emissionsCreationDate__)
        {
            builder.Add(EmissionsCreationDateJsonPropertyName, emissionsCreationDate__.AsAny);
        }

        if (@event is Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray @event__)
        {
            builder.Add(EventJsonPropertyName, @event__.AsAny);
        }

        if (facilitySite is Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray facilitySite__)
        {
            builder.Add(FacilitySiteJsonPropertyName, facilitySite__.AsAny);
        }

        if (location is Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray location__)
        {
            builder.Add(LocationJsonPropertyName, location__.AsAny);
        }

        if (model is Corvus.Json.JsonString model__)
        {
            builder.Add(ModelJsonPropertyName, model__.AsAny);
        }

        if (modelVersion is Corvus.Json.JsonString modelVersion__)
        {
            builder.Add(ModelVersionJsonPropertyName, modelVersion__.AsAny);
        }

        if (status is Caers.Api.SchemaEntities.EmissionsReport.StatusEntity status__)
        {
            builder.Add(StatusJsonPropertyName, status__.AsAny);
        }

        if (submittalComment is Corvus.Json.JsonString submittalComment__)
        {
            builder.Add(SubmittalCommentJsonPropertyName, submittalComment__.AsAny);
        }

        if (userIdentifier is Corvus.Json.JsonString userIdentifier__)
        {
            builder.Add(UserIdentifierJsonPropertyName, userIdentifier__.AsAny);
        }

        if (validationStatus is Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity validationStatus__)
        {
            builder.Add(ValidationStatusJsonPropertyName, validationStatus__.AsAny);
        }

        return builder.ToImmutable();
    }

    /// <summary>
    /// Sets agencyFacilityIdentifier.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithAgencyFacilityIdentifier(in Caers.Api.SchemaEntities.EmissionsReport.AgencyFacilityIdentifierEntity value)
    {
        return this.SetProperty(AgencyFacilityIdentifierJsonPropertyName, value);
    }

    /// <summary>
    /// Sets eisLastSubmissionStatus.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithEisLastSubmissionStatus(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(EisLastSubmissionStatusJsonPropertyName, value);
    }

    /// <summary>
    /// Sets emissionsCreationDate.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithEmissionsCreationDate(in Corvus.Json.JsonDate value)
    {
        return this.SetProperty(EmissionsCreationDateJsonPropertyName, value);
    }

    /// <summary>
    /// Sets emissionsYear.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithEmissionsYear(in Corvus.Json.JsonInteger value)
    {
        return this.SetProperty(EmissionsYearJsonPropertyName, value);
    }

    /// <summary>
    /// Sets event.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithEvent(in Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray value)
    {
        return this.SetProperty(EventJsonPropertyName, value);
    }

    /// <summary>
    /// Sets facilitySite.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithFacilitySite(in Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray value)
    {
        return this.SetProperty(FacilitySiteJsonPropertyName, value);
    }

    /// <summary>
    /// Sets location.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithLocation(in Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray value)
    {
        return this.SetProperty(LocationJsonPropertyName, value);
    }

    /// <summary>
    /// Sets model.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithModel(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(ModelJsonPropertyName, value);
    }

    /// <summary>
    /// Sets modelVersion.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithModelVersion(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(ModelVersionJsonPropertyName, value);
    }

    /// <summary>
    /// Sets programSystemCode.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithProgramSystemCode(in Caers.Api.SchemaEntities.EmissionsReport.ProgramSystemCodeEntity value)
    {
        return this.SetProperty(ProgramSystemCodeJsonPropertyName, value);
    }

    /// <summary>
    /// Sets status.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithStatus(in Caers.Api.SchemaEntities.EmissionsReport.StatusEntity value)
    {
        return this.SetProperty(StatusJsonPropertyName, value);
    }

    /// <summary>
    /// Sets submittalComment.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithSubmittalComment(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SubmittalCommentJsonPropertyName, value);
    }

    /// <summary>
    /// Sets userIdentifier.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithUserIdentifier(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(UserIdentifierJsonPropertyName, value);
    }

    /// <summary>
    /// Sets validationStatus.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithValidationStatus(in Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity value)
    {
        return this.SetProperty(ValidationStatusJsonPropertyName, value);
    }

    /// <summary>
    /// Sets version.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public EmissionsReport WithVersion(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(VersionJsonPropertyName, value);
    }

    private static ValidationContext __CorvusValidateAgencyFacilityIdentifier(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.AgencyFacilityIdentifierEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateEmissionsYear(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonInteger>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateProgramSystemCode(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.ProgramSystemCodeEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateVersion(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateStatus(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.StatusEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateValidationStatus(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.ValidationStatusEntity>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateEisLastSubmissionStatus(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateFacilitySite(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.FacilitySiteFacilitySiteArray>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateUserIdentifier(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateModel(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateModelVersion(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateEmissionsCreationDate(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonDate>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSubmittalComment(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateLocation(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.LocationDataTypeArray>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateEvent(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Caers.Api.SchemaEntities.EmissionsReport.EventDataTypeArray>().Validate(validationContext, level);
    }

    /// <summary>
    /// Tries to get the validator for the given property.
    /// </summary>
    /// <param name = "property">The property for which to get the validator.</param>
    /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
    /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
    /// <returns><c>True</c> if the validator was found.</returns>
    private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
    {
        if (hasJsonElementBacking)
        {
            if (property.NameEquals(AgencyFacilityIdentifierUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateAgencyFacilityIdentifier;
                return true;
            }
            else if (property.NameEquals(EmissionsYearUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateEmissionsYear;
                return true;
            }
            else if (property.NameEquals(ProgramSystemCodeUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateProgramSystemCode;
                return true;
            }
            else if (property.NameEquals(VersionUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateVersion;
                return true;
            }
            else if (property.NameEquals(StatusUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateStatus;
                return true;
            }
            else if (property.NameEquals(ValidationStatusUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateValidationStatus;
                return true;
            }
            else if (property.NameEquals(EisLastSubmissionStatusUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateEisLastSubmissionStatus;
                return true;
            }
            else if (property.NameEquals(FacilitySiteUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateFacilitySite;
                return true;
            }
            else if (property.NameEquals(UserIdentifierUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateUserIdentifier;
                return true;
            }
            else if (property.NameEquals(ModelUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateModel;
                return true;
            }
            else if (property.NameEquals(ModelVersionUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateModelVersion;
                return true;
            }
            else if (property.NameEquals(EmissionsCreationDateUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateEmissionsCreationDate;
                return true;
            }
            else if (property.NameEquals(SubmittalCommentUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSubmittalComment;
                return true;
            }
            else if (property.NameEquals(LocationUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateLocation;
                return true;
            }
            else if (property.NameEquals(EventUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateEvent;
                return true;
            }
        }
        else
        {
            if (property.NameEquals(AgencyFacilityIdentifierJsonPropertyName))
            {
                propertyValidator = __CorvusValidateAgencyFacilityIdentifier;
                return true;
            }
            else if (property.NameEquals(EmissionsYearJsonPropertyName))
            {
                propertyValidator = __CorvusValidateEmissionsYear;
                return true;
            }
            else if (property.NameEquals(ProgramSystemCodeJsonPropertyName))
            {
                propertyValidator = __CorvusValidateProgramSystemCode;
                return true;
            }
            else if (property.NameEquals(VersionJsonPropertyName))
            {
                propertyValidator = __CorvusValidateVersion;
                return true;
            }
            else if (property.NameEquals(StatusJsonPropertyName))
            {
                propertyValidator = __CorvusValidateStatus;
                return true;
            }
            else if (property.NameEquals(ValidationStatusJsonPropertyName))
            {
                propertyValidator = __CorvusValidateValidationStatus;
                return true;
            }
            else if (property.NameEquals(EisLastSubmissionStatusJsonPropertyName))
            {
                propertyValidator = __CorvusValidateEisLastSubmissionStatus;
                return true;
            }
            else if (property.NameEquals(FacilitySiteJsonPropertyName))
            {
                propertyValidator = __CorvusValidateFacilitySite;
                return true;
            }
            else if (property.NameEquals(UserIdentifierJsonPropertyName))
            {
                propertyValidator = __CorvusValidateUserIdentifier;
                return true;
            }
            else if (property.NameEquals(ModelJsonPropertyName))
            {
                propertyValidator = __CorvusValidateModel;
                return true;
            }
            else if (property.NameEquals(ModelVersionJsonPropertyName))
            {
                propertyValidator = __CorvusValidateModelVersion;
                return true;
            }
            else if (property.NameEquals(EmissionsCreationDateJsonPropertyName))
            {
                propertyValidator = __CorvusValidateEmissionsCreationDate;
                return true;
            }
            else if (property.NameEquals(SubmittalCommentJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSubmittalComment;
                return true;
            }
            else if (property.NameEquals(LocationJsonPropertyName))
            {
                propertyValidator = __CorvusValidateLocation;
                return true;
            }
            else if (property.NameEquals(EventJsonPropertyName))
            {
                propertyValidator = __CorvusValidateEvent;
                return true;
            }
        }

        propertyValidator = null;
        return false;
    }
}