//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Caers.Api.SchemaEntities;
/// <summary>
/// A type generated from a JsonSchema specification.
/// </summary>
public readonly partial struct SupplementalCalculationParameterDataType
{
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterComment"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterCommentUtf8JsonPropertyName => "supplementalCalculationParameterComment"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterComment"/>.
    /// </summary>
    public const string SupplementalCalculationParameterCommentJsonPropertyName = "supplementalCalculationParameterComment";
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterDataSource"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterDataSourceUtf8JsonPropertyName => "supplementalCalculationParameterDataSource"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterDataSource"/>.
    /// </summary>
    public const string SupplementalCalculationParameterDataSourceJsonPropertyName = "supplementalCalculationParameterDataSource";
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterDataYear"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterDataYearUtf8JsonPropertyName => "supplementalCalculationParameterDataYear"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterDataYear"/>.
    /// </summary>
    public const string SupplementalCalculationParameterDataYearJsonPropertyName = "supplementalCalculationParameterDataYear";
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterDenominatorUnitofMeasureCode"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterDenominatorUnitofMeasureCodeUtf8JsonPropertyName => "supplementalCalculationParameterDenominatorUnitofMeasureCode"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterDenominatorUnitofMeasureCode"/>.
    /// </summary>
    public const string SupplementalCalculationParameterDenominatorUnitofMeasureCodeJsonPropertyName = "supplementalCalculationParameterDenominatorUnitofMeasureCode";
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterNumeratorUnitofMeasureCode"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterNumeratorUnitofMeasureCodeUtf8JsonPropertyName => "supplementalCalculationParameterNumeratorUnitofMeasureCode"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterNumeratorUnitofMeasureCode"/>.
    /// </summary>
    public const string SupplementalCalculationParameterNumeratorUnitofMeasureCodeJsonPropertyName = "supplementalCalculationParameterNumeratorUnitofMeasureCode";
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterType"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterTypeUtf8JsonPropertyName => "supplementalCalculationParameterType"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterType"/>.
    /// </summary>
    public const string SupplementalCalculationParameterTypeJsonPropertyName = "supplementalCalculationParameterType";
    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterValue"/>.
    /// </summary>
    public static ReadOnlySpan<byte> SupplementalCalculationParameterValueUtf8JsonPropertyName => "supplementalCalculationParameterValue"u8;

    /// <summary>
    /// JSON property name for <see cref = "SupplementalCalculationParameterValue"/>.
    /// </summary>
    public const string SupplementalCalculationParameterValueJsonPropertyName = "supplementalCalculationParameterValue";
    /// <summary>
    /// Gets SupplementalCalculationParameterComment.
    /// </summary>
    public Corvus.Json.JsonString SupplementalCalculationParameterComment
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterCommentUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterCommentJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SupplementalCalculationParameterDataSource.
    /// </summary>
    public Corvus.Json.JsonString SupplementalCalculationParameterDataSource
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterDataSourceUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterDataSourceJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SupplementalCalculationParameterDataYear.
    /// </summary>
    public Corvus.Json.JsonDateTime SupplementalCalculationParameterDataYear
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterDataYearUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonDateTime(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterDataYearJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonDateTime>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SupplementalCalculationParameterDenominatorUnitofMeasureCode.
    /// </summary>
    public Corvus.Json.JsonString SupplementalCalculationParameterDenominatorUnitofMeasureCode
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterDenominatorUnitofMeasureCodeUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterDenominatorUnitofMeasureCodeJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SupplementalCalculationParameterNumeratorUnitofMeasureCode.
    /// </summary>
    public Corvus.Json.JsonString SupplementalCalculationParameterNumeratorUnitofMeasureCode
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterNumeratorUnitofMeasureCodeUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterNumeratorUnitofMeasureCodeJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SupplementalCalculationParameterType.
    /// </summary>
    public Corvus.Json.JsonString SupplementalCalculationParameterType
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterTypeUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterTypeJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Gets SupplementalCalculationParameterValue.
    /// </summary>
    public Corvus.Json.JsonString SupplementalCalculationParameterValue
    {
        get
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                {
                    return default;
                }

                if (this.jsonElementBacking.TryGetProperty(SupplementalCalculationParameterValueUtf8JsonPropertyName, out JsonElement result))
                {
                    return new Corvus.Json.JsonString(result);
                }
            }

            if ((this.backing & Backing.Object) != 0)
            {
                if (this.objectBacking.TryGetValue(SupplementalCalculationParameterValueJsonPropertyName, out JsonAny result))
                {
                    return result.As<Corvus.Json.JsonString>();
                }
            }

            return default;
        }
    }

    /// <summary>
    /// Creates an instance of a <see cref = "SupplementalCalculationParameterDataType"/>.
    /// </summary>
    public static SupplementalCalculationParameterDataType Create(Corvus.Json.JsonString? supplementalCalculationParameterComment = null, Corvus.Json.JsonString? supplementalCalculationParameterDataSource = null, Corvus.Json.JsonDateTime? supplementalCalculationParameterDataYear = null, Corvus.Json.JsonString? supplementalCalculationParameterDenominatorUnitofMeasureCode = null, Corvus.Json.JsonString? supplementalCalculationParameterNumeratorUnitofMeasureCode = null, Corvus.Json.JsonString? supplementalCalculationParameterType = null, Corvus.Json.JsonString? supplementalCalculationParameterValue = null)
    {
        var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
        if (supplementalCalculationParameterComment is Corvus.Json.JsonString supplementalCalculationParameterComment__)
        {
            builder.Add(SupplementalCalculationParameterCommentJsonPropertyName, supplementalCalculationParameterComment__.AsAny);
        }

        if (supplementalCalculationParameterDataSource is Corvus.Json.JsonString supplementalCalculationParameterDataSource__)
        {
            builder.Add(SupplementalCalculationParameterDataSourceJsonPropertyName, supplementalCalculationParameterDataSource__.AsAny);
        }

        if (supplementalCalculationParameterDataYear is Corvus.Json.JsonDateTime supplementalCalculationParameterDataYear__)
        {
            builder.Add(SupplementalCalculationParameterDataYearJsonPropertyName, supplementalCalculationParameterDataYear__.AsAny);
        }

        if (supplementalCalculationParameterDenominatorUnitofMeasureCode is Corvus.Json.JsonString supplementalCalculationParameterDenominatorUnitofMeasureCode__)
        {
            builder.Add(SupplementalCalculationParameterDenominatorUnitofMeasureCodeJsonPropertyName, supplementalCalculationParameterDenominatorUnitofMeasureCode__.AsAny);
        }

        if (supplementalCalculationParameterNumeratorUnitofMeasureCode is Corvus.Json.JsonString supplementalCalculationParameterNumeratorUnitofMeasureCode__)
        {
            builder.Add(SupplementalCalculationParameterNumeratorUnitofMeasureCodeJsonPropertyName, supplementalCalculationParameterNumeratorUnitofMeasureCode__.AsAny);
        }

        if (supplementalCalculationParameterType is Corvus.Json.JsonString supplementalCalculationParameterType__)
        {
            builder.Add(SupplementalCalculationParameterTypeJsonPropertyName, supplementalCalculationParameterType__.AsAny);
        }

        if (supplementalCalculationParameterValue is Corvus.Json.JsonString supplementalCalculationParameterValue__)
        {
            builder.Add(SupplementalCalculationParameterValueJsonPropertyName, supplementalCalculationParameterValue__.AsAny);
        }

        return builder.ToImmutable();
    }

    /// <summary>
    /// Sets supplementalCalculationParameterComment.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterComment(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SupplementalCalculationParameterCommentJsonPropertyName, value);
    }

    /// <summary>
    /// Sets supplementalCalculationParameterDataSource.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterDataSource(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SupplementalCalculationParameterDataSourceJsonPropertyName, value);
    }

    /// <summary>
    /// Sets supplementalCalculationParameterDataYear.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterDataYear(in Corvus.Json.JsonDateTime value)
    {
        return this.SetProperty(SupplementalCalculationParameterDataYearJsonPropertyName, value);
    }

    /// <summary>
    /// Sets supplementalCalculationParameterDenominatorUnitofMeasureCode.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterDenominatorUnitofMeasureCode(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SupplementalCalculationParameterDenominatorUnitofMeasureCodeJsonPropertyName, value);
    }

    /// <summary>
    /// Sets supplementalCalculationParameterNumeratorUnitofMeasureCode.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterNumeratorUnitofMeasureCode(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SupplementalCalculationParameterNumeratorUnitofMeasureCodeJsonPropertyName, value);
    }

    /// <summary>
    /// Sets supplementalCalculationParameterType.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterType(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SupplementalCalculationParameterTypeJsonPropertyName, value);
    }

    /// <summary>
    /// Sets supplementalCalculationParameterValue.
    /// </summary>
    /// <param name = "value">The value to set.</param>
    /// <returns>The entity with the updated property.</returns>
    public SupplementalCalculationParameterDataType WithSupplementalCalculationParameterValue(in Corvus.Json.JsonString value)
    {
        return this.SetProperty(SupplementalCalculationParameterValueJsonPropertyName, value);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterType(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterValue(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterNumeratorUnitofMeasureCode(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterDenominatorUnitofMeasureCode(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterDataYear(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonDateTime>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterDataSource(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    private static ValidationContext __CorvusValidateSupplementalCalculationParameterComment(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
    {
        return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
    }

    /// <summary>
    /// Tries to get the validator for the given property.
    /// </summary>
    /// <param name = "property">The property for which to get the validator.</param>
    /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
    /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
    /// <returns><c>True</c> if the validator was found.</returns>
    private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
    {
        if (hasJsonElementBacking)
        {
            if (property.NameEquals(SupplementalCalculationParameterTypeUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterType;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterValueUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterValue;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterNumeratorUnitofMeasureCodeUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterNumeratorUnitofMeasureCode;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterDenominatorUnitofMeasureCodeUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterDenominatorUnitofMeasureCode;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterDataYearUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterDataYear;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterDataSourceUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterDataSource;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterCommentUtf8JsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterComment;
                return true;
            }
        }
        else
        {
            if (property.NameEquals(SupplementalCalculationParameterTypeJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterType;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterValueJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterValue;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterNumeratorUnitofMeasureCodeJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterNumeratorUnitofMeasureCode;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterDenominatorUnitofMeasureCodeJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterDenominatorUnitofMeasureCode;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterDataYearJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterDataYear;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterDataSourceJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterDataSource;
                return true;
            }
            else if (property.NameEquals(SupplementalCalculationParameterCommentJsonPropertyName))
            {
                propertyValidator = __CorvusValidateSupplementalCalculationParameterComment;
                return true;
            }
        }

        propertyValidator = null;
        return false;
    }
}